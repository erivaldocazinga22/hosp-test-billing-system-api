// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  name      String
  avatarUrl String? @map("avatar_url")
  email     String  @unique
  password  String

  RefreshToken RefreshToken?
  roles        Role[]        @relation("UserRoles")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt()

  @@map("users")
}

model RefreshToken {
  id        String @id @default(uuid())
  userId    Int    @unique
  expiresIn Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  User User @relation(fields: [userId], references: [id])

  @@map("refresh_token")
}

model Role {
  id   String @id @default(uuid())
  name String @unique

  permissions Permission[] @relation("RolePermissions")
  users       User[]       @relation("UserRoles")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt()
}

model Permission {
  id   String @id @default(uuid())
  name String @unique

  roles     Role[]   @relation("RolePermissions")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}
